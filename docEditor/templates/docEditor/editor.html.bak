<body>
	<input type="text" value ="" name="editorId" id="editorId" hidden>
	<div ng-app="App" id="page-wrapper" ng-controller="contentController">
		<div contenteditable="true" ng-model="text01" style="background:white;border:1px solid black; height:500px; overflow:hidden">
		</div>
	</div>
<script>
var app = angular.module("App", []);
app.controller('contentController', ['$scope','$http', function($scope, $http) {
	$scope.text01 = 'Click here to edit the text.';
	$scope.$watch(function () {
		return $scope.text01;
		},
		function (newValue, oldValue) {
			if(newValue == oldValue){return;}
			newValueArray = newValue.split('<br>');
			oldValueArray = oldValue.split('<br>');
			var changedValue="";
			var lineNumber=-1;
			angular.forEach(newValueArray,function(value,index){
				if(index < oldValueArray.length)
				{
					if(newValueArray[index] != oldValueArray[index]){
						changedValue = newValueArray[index];
						lineNumber = index + 1;
					}
				}else if(index == oldValueArray.length){
					changedValue = newValueArray[index];
					lineNumber = index + 1;
				}
			});
			if(changedValue!="" && lineNumber!=-1){
				if($('#editorId').val()=="")
				{
					$http({
						method: 'POST',
						url: '/docEditor/editor/',
						data: {"username":"sejal","lineNumber":lineNumber,"editorText":changedValue},
						headers: {'Content-Type': 'application/json'}
					}).success(function(response){
						$scope.editorTextModel = response.editor;
						$("#editorId").val(response.editorId);
					});
				}else{
					$http({
						method: 'PUT',
						url: '/docEditor/editor/'+$("#editorId").val()+'/',
						data: {"username":"sejal","lineNumber":lineNumber,"editorText":changedValue},
						headers: {'Content-Type': 'application/json'}
					}).success(function(response){
						$scope.editorTextModel = response.editor;
					});
				}
			}
		}, true);

		$('div[contenteditable]').keydown(function(e) {
			// trap the return key being pressed
			if (e.keyCode === 13) {
			  // insert 2 br tags (if only one br tag is inserted the cursor won't go to the next line)
			  document.execCommand('insertHTML', false, '<br><br>');
			  // prevent the default behaviour of return key pressed
			  return false;
			}
		});

	}]);

app.directive("contenteditable", function() {
  return {
	require: "ngModel",
	link: function(scope, element, attrs, ngModel) {

	  function read() {
		ngModel.$setViewValue(element.html());
	  }

	  ngModel.$render = function() {
		element.html(ngModel.$viewValue || "");
	  };

	  element.bind("blur keyup change", function() {
		scope.$apply(read);
	  });
	}
  };
});

app.config(['$httpProvider', function($httpProvider) {
		$httpProvider.defaults.headers.common['X-CSRFToken'] = '{{ csrf_token|escapejs}}';
  }]);
</script>